/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OneLoginApi);
  }
}(this, function(expect, OneLoginApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OneLoginApi.User();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('User', function() {
    it('should create an instance of User', function() {
      // uncomment below and update the code to test User
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be.a(OneLoginApi.User);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property firstname (base name: "firstname")', function() {
      // uncomment below and update the code to test the property firstname
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property lastname (base name: "lastname")', function() {
      // uncomment below and update the code to test the property lastname
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property department (base name: "department")', function() {
      // uncomment below and update the code to test the property department
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property groupId (base name: "group_id")', function() {
      // uncomment below and update the code to test the property groupId
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property roleIds (base name: "role_ids")', function() {
      // uncomment below and update the code to test the property roleIds
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property directoryId (base name: "directory_id")', function() {
      // uncomment below and update the code to test the property directoryId
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property trustedIdpId (base name: "trusted_idp_id")', function() {
      // uncomment below and update the code to test the property trustedIdpId
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property managerAdId (base name: "manager_ad_id")', function() {
      // uncomment below and update the code to test the property managerAdId
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property managerUserId (base name: "manager_user_id")', function() {
      // uncomment below and update the code to test the property managerUserId
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property samaccountName (base name: "samaccount_name")', function() {
      // uncomment below and update the code to test the property samaccountName
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property memberOf (base name: "member_of")', function() {
      // uncomment below and update the code to test the property memberOf
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property userprincipalname (base name: "userprincipalname")', function() {
      // uncomment below and update the code to test the property userprincipalname
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property distinguishedName (base name: "distinguished_name")', function() {
      // uncomment below and update the code to test the property distinguishedName
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "external_id")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property activatedAt (base name: "activated_at")', function() {
      // uncomment below and update the code to test the property activatedAt
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property lastLogin (base name: "last_login")', function() {
      // uncomment below and update the code to test the property lastLogin
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property invitationSentAt (base name: "invitation_sent_at")', function() {
      // uncomment below and update the code to test the property invitationSentAt
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property preferredLocaleCode (base name: "preferred_locale_code")', function() {
      // uncomment below and update the code to test the property preferredLocaleCode
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property customAttributes (base name: "custom_attributes")', function() {
      // uncomment below and update the code to test the property customAttributes
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property invalidLoginAttempts (base name: "invalid_login_attempts")', function() {
      // uncomment below and update the code to test the property invalidLoginAttempts
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property lockedUntil (base name: "locked_until")', function() {
      // uncomment below and update the code to test the property lockedUntil
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property passwordChangedAt (base name: "password_changed_at")', function() {
      // uncomment below and update the code to test the property passwordChangedAt
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property passwordConfirmation (base name: "password_confirmation")', function() {
      // uncomment below and update the code to test the property passwordConfirmation
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property passwordAlgorithm (base name: "password_algorithm")', function() {
      // uncomment below and update the code to test the property passwordAlgorithm
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

    it('should have the property salt (base name: "salt")', function() {
      // uncomment below and update the code to test the property salt
      //var instance = new OneLoginApi.User();
      //expect(instance).to.be();
    });

  });

}));
