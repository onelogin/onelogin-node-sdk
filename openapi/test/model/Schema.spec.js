/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OneLoginApi);
  }
}(this, function(expect, OneLoginApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OneLoginApi.Schema();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Schema', function() {
    it('should create an instance of Schema', function() {
      // uncomment below and update the code to test Schema
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be.a(OneLoginApi.Schema);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property connectorId (base name: "connector_id")', function() {
      // uncomment below and update the code to test the property connectorId
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property policyId (base name: "policy_id")', function() {
      // uncomment below and update the code to test the property policyId
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property brandId (base name: "brand_id")', function() {
      // uncomment below and update the code to test the property brandId
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property iconUrl (base name: "icon_url")', function() {
      // uncomment below and update the code to test the property iconUrl
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property visible (base name: "visible")', function() {
      // uncomment below and update the code to test the property visible
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property authMethod (base name: "auth_method")', function() {
      // uncomment below and update the code to test the property authMethod
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property tabId (base name: "tab_id")', function() {
      // uncomment below and update the code to test the property tabId
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property roleIds (base name: "role_ids")', function() {
      // uncomment below and update the code to test the property roleIds
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property allowAssumedSignin (base name: "allow_assumed_signin")', function() {
      // uncomment below and update the code to test the property allowAssumedSignin
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property provisioning (base name: "provisioning")', function() {
      // uncomment below and update the code to test the property provisioning
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property sso (base name: "sso")', function() {
      // uncomment below and update the code to test the property sso
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property configuration (base name: "configuration")', function() {
      // uncomment below and update the code to test the property configuration
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

    it('should have the property enforcementPoint (base name: "enforcement_point")', function() {
      // uncomment below and update the code to test the property enforcementPoint
      //var instance = new OneLoginApi.Schema();
      //expect(instance).to.be();
    });

  });

}));
