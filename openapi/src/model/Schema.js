/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SchemaProvisioning from './SchemaProvisioning';

/**
 * The Schema model module.
 * @module model/Schema
 * @version 0.0.1
 */
class Schema {
    /**
     * Constructs a new <code>Schema</code>.
     * @alias module:model/Schema
     */
    constructor() { 
        
        Schema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Schema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Schema} obj Optional instance to populate.
     * @return {module:model/Schema} The populated <code>Schema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Schema();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('connector_id')) {
                obj['connector_id'] = ApiClient.convertToType(data['connector_id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('policy_id')) {
                obj['policy_id'] = ApiClient.convertToType(data['policy_id'], 'Number');
            }
            if (data.hasOwnProperty('brand_id')) {
                obj['brand_id'] = ApiClient.convertToType(data['brand_id'], 'Number');
            }
            if (data.hasOwnProperty('icon_url')) {
                obj['icon_url'] = ApiClient.convertToType(data['icon_url'], 'String');
            }
            if (data.hasOwnProperty('visible')) {
                obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
            }
            if (data.hasOwnProperty('auth_method')) {
                obj['auth_method'] = ApiClient.convertToType(data['auth_method'], 'Number');
            }
            if (data.hasOwnProperty('tab_id')) {
                obj['tab_id'] = ApiClient.convertToType(data['tab_id'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('role_ids')) {
                obj['role_ids'] = ApiClient.convertToType(data['role_ids'], ['Number']);
            }
            if (data.hasOwnProperty('allow_assumed_signin')) {
                obj['allow_assumed_signin'] = ApiClient.convertToType(data['allow_assumed_signin'], 'Boolean');
            }
            if (data.hasOwnProperty('provisioning')) {
                obj['provisioning'] = SchemaProvisioning.constructFromObject(data['provisioning']);
            }
            if (data.hasOwnProperty('sso')) {
                obj['sso'] = ApiClient.convertToType(data['sso'], Object);
            }
            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = ApiClient.convertToType(data['configuration'], Object);
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], Object);
            }
            if (data.hasOwnProperty('enforcement_point')) {
                obj['enforcement_point'] = ApiClient.convertToType(data['enforcement_point'], Object);
            }
        }
        return obj;
    }


}

/**
 * Apps unique ID in OneLogin.
 * @member {Number} id
 */
Schema.prototype['id'] = undefined;

/**
 * ID of the apps underlying connector.
 * @member {Number} connector_id
 */
Schema.prototype['connector_id'] = undefined;

/**
 * App name.
 * @member {String} name
 */
Schema.prototype['name'] = undefined;

/**
 * Freeform description of the app.
 * @member {String} description
 */
Schema.prototype['description'] = undefined;

/**
 * Freeform notes about the app.
 * @member {String} notes
 */
Schema.prototype['notes'] = undefined;

/**
 * The security policy assigned to the app.
 * @member {Number} policy_id
 */
Schema.prototype['policy_id'] = undefined;

/**
 * The custom login page branding to use for this app. Applies to app initiated logins via OIDC or SAML.
 * @member {Number} brand_id
 */
Schema.prototype['brand_id'] = undefined;

/**
 * A link to the apps icon url.
 * @member {String} icon_url
 */
Schema.prototype['icon_url'] = undefined;

/**
 * Indicates if the app is visible in the OneLogin portal.
 * @member {Boolean} visible
 */
Schema.prototype['visible'] = undefined;

/**
 * An ID indicating the type of app.
 * @member {module:model/Schema.AuthMethodEnum} auth_method
 */
Schema.prototype['auth_method'] = undefined;

/**
 * ID of the OneLogin portal tab that the app is assigned to.
 * @member {Number} tab_id
 */
Schema.prototype['tab_id'] = undefined;

/**
 * The date the app was created.
 * @member {String} created_at
 */
Schema.prototype['created_at'] = undefined;

/**
 * The date the app was last updated.
 * @member {String} updated_at
 */
Schema.prototype['updated_at'] = undefined;

/**
 * List of Role IDs that are assigned to the app. On App Create or Update the entire array is replaced with the values provided.
 * @member {Array.<Number>} role_ids
 */
Schema.prototype['role_ids'] = undefined;

/**
 * Indicates whether or not administrators can access the app as a user that they have assumed control over.
 * @member {Boolean} allow_assumed_signin
 */
Schema.prototype['allow_assumed_signin'] = undefined;

/**
 * @member {module:model/SchemaProvisioning} provisioning
 */
Schema.prototype['provisioning'] = undefined;

/**
 * @member {Object} sso
 */
Schema.prototype['sso'] = undefined;

/**
 * @member {Object} configuration
 */
Schema.prototype['configuration'] = undefined;

/**
 * @member {Object} parameters
 */
Schema.prototype['parameters'] = undefined;

/**
 * @member {Object} enforcement_point
 */
Schema.prototype['enforcement_point'] = undefined;





/**
 * Allowed values for the <code>auth_method</code> property.
 * @enum {Number}
 * @readonly
 */
Schema['AuthMethodEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 6
     * @const
     */
    "6": 6,

    /**
     * value: 7
     * @const
     */
    "7": 7,

    /**
     * value: 8
     * @const
     */
    "8": 8
};



export default Schema;

