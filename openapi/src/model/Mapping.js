/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Action from './Action';
import Condition from './Condition';

/**
 * The Mapping model module.
 * @module model/Mapping
 * @version 0.0.1
 */
class Mapping {
    /**
     * Constructs a new <code>Mapping</code>.
     * @alias module:model/Mapping
     * @param name {String} The name of the mapping.
     * @param enabled {Boolean} Indicates if the mapping is enabled or not.
     * @param match {module:model/Mapping.MatchEnum} Indicates how conditions should be matched.
     * @param position {Number} Indicates the order of the mapping. When `null` this will default to last position.
     * @param actions {Array.<module:model/Action>} An array of actions that will be applied to the users that are matched by the conditions.
     */
    constructor(name, enabled, match, position, actions) { 
        
        Mapping.initialize(this, name, enabled, match, position, actions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, enabled, match, position, actions) { 
        obj['name'] = name;
        obj['enabled'] = enabled;
        obj['match'] = match;
        obj['position'] = position;
        obj['actions'] = actions;
    }

    /**
     * Constructs a <code>Mapping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Mapping} obj Optional instance to populate.
     * @return {module:model/Mapping} The populated <code>Mapping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Mapping();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('match')) {
                obj['match'] = ApiClient.convertToType(data['match'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [Condition]);
            }
            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], [Action]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Mapping.prototype['id'] = undefined;

/**
 * The name of the mapping.
 * @member {String} name
 */
Mapping.prototype['name'] = undefined;

/**
 * Indicates if the mapping is enabled or not.
 * @member {Boolean} enabled
 */
Mapping.prototype['enabled'] = undefined;

/**
 * Indicates how conditions should be matched.
 * @member {module:model/Mapping.MatchEnum} match
 */
Mapping.prototype['match'] = undefined;

/**
 * Indicates the order of the mapping. When `null` this will default to last position.
 * @member {Number} position
 */
Mapping.prototype['position'] = undefined;

/**
 * An array of conditions that the user must meet in order for the mapping to be applied.
 * @member {Array.<module:model/Condition>} conditions
 */
Mapping.prototype['conditions'] = undefined;

/**
 * An array of actions that will be applied to the users that are matched by the conditions.
 * @member {Array.<module:model/Action>} actions
 */
Mapping.prototype['actions'] = undefined;





/**
 * Allowed values for the <code>match</code> property.
 * @enum {String}
 * @readonly
 */
Mapping['MatchEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "any"
     * @const
     */
    "any": "any"
};



export default Mapping;

