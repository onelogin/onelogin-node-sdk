/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FactorInnerFactorData model module.
 * @module model/FactorInnerFactorData
 * @version 0.0.1
 */
class FactorInnerFactorData {
    /**
     * Constructs a new <code>FactorInnerFactorData</code>.
     * Array of factor specific properties. For example, the token or totp code for OneLogin Protect.
     * @alias module:model/FactorInnerFactorData
     */
    constructor() { 
        
        FactorInnerFactorData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FactorInnerFactorData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactorInnerFactorData} obj Optional instance to populate.
     * @return {module:model/FactorInnerFactorData} The populated <code>FactorInnerFactorData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactorInnerFactorData();

            if (data.hasOwnProperty('verification_token')) {
                obj['verification_token'] = ApiClient.convertToType(data['verification_token'], 'String');
            }
            if (data.hasOwnProperty('totp_url')) {
                obj['totp_url'] = ApiClient.convertToType(data['totp_url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The token which can be used to verify the factor registration.
 * @member {String} verification_token
 */
FactorInnerFactorData.prototype['verification_token'] = undefined;

/**
 * OTP Url that can be leveraged for any authenticator that supports the key uri format.
 * @member {String} totp_url
 */
FactorInnerFactorData.prototype['totp_url'] = undefined;






export default FactorInnerFactorData;

