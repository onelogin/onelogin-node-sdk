/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Source from './Source';

/**
 * The RiskRule model module.
 * @module model/RiskRule
 * @version 0.0.1
 */
class RiskRule {
    /**
     * Constructs a new <code>RiskRule</code>.
     * @alias module:model/RiskRule
     */
    constructor() { 
        
        RiskRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RiskRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskRule} obj Optional instance to populate.
     * @return {module:model/RiskRule} The populated <code>RiskRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskRule();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], ['String']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = Source.constructFromObject(data['source']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
RiskRule.prototype['id'] = undefined;

/**
 * The name of this rule
 * @member {String} name
 */
RiskRule.prototype['name'] = undefined;

/**
 * @member {String} description
 */
RiskRule.prototype['description'] = undefined;

/**
 * The type parameter specifies the type of rule that will be created.
 * @member {module:model/RiskRule.TypeEnum} type
 */
RiskRule.prototype['type'] = undefined;

/**
 * The target parameter that will be used when evaluating the rule against an incoming event.
 * @member {module:model/RiskRule.TargetEnum} target
 */
RiskRule.prototype['target'] = undefined;

/**
 * A list of IP addresses or country codes or names to evaluate against each event.
 * @member {Array.<String>} filters
 */
RiskRule.prototype['filters'] = undefined;

/**
 * @member {module:model/Source} source
 */
RiskRule.prototype['source'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
RiskRule['TypeEnum'] = {

    /**
     * value: "blacklist"
     * @const
     */
    "blacklist": "blacklist",

    /**
     * value: "whitelist"
     * @const
     */
    "whitelist": "whitelist"
};


/**
 * Allowed values for the <code>target</code> property.
 * @enum {String}
 * @readonly
 */
RiskRule['TargetEnum'] = {

    /**
     * value: "location.ip"
     * @const
     */
    "ip": "location.ip",

    /**
     * value: "location.address.country_iso_code"
     * @const
     */
    "address.country_iso_code": "location.address.country_iso_code"
};



export default RiskRule;

