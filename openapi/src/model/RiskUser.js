/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RiskUser model module.
 * @module model/RiskUser
 * @version 0.0.1
 */
class RiskUser {
    /**
     * Constructs a new <code>RiskUser</code>.
     * An Object containing User details.
     * @alias module:model/RiskUser
     * @param id {String} A unique identifier for the user.
     */
    constructor(id) { 
        
        RiskUser.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>RiskUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskUser} obj Optional instance to populate.
     * @return {module:model/RiskUser} The populated <code>RiskUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskUser();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('authenticated')) {
                obj['authenticated'] = ApiClient.convertToType(data['authenticated'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * A unique identifier for the user.
 * @member {String} id
 */
RiskUser.prototype['id'] = undefined;

/**
 * A name for the user.
 * @member {String} name
 */
RiskUser.prototype['name'] = undefined;

/**
 * Indicates if the metadata supplied in this event should be considered as trusted for the user.
 * @member {Boolean} authenticated
 * @default false
 */
RiskUser.prototype['authenticated'] = false;






export default RiskUser;

