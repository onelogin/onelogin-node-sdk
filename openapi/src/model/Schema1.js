/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Schema1AddedBy from './Schema1AddedBy';

/**
 * The Schema1 model module.
 * @module model/Schema1
 * @version 0.0.1
 */
class Schema1 {
    /**
     * Constructs a new <code>Schema1</code>.
     * @alias module:model/Schema1
     */
    constructor() { 
        
        Schema1.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Schema1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Schema1} obj Optional instance to populate.
     * @return {module:model/Schema1} The populated <code>Schema1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Schema1();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('added_by')) {
                obj['added_by'] = Schema1AddedBy.constructFromObject(data['added_by']);
            }
            if (data.hasOwnProperty('added_at')) {
                obj['added_at'] = ApiClient.convertToType(data['added_at'], 'String');
            }
            if (data.hasOwnProperty('assigned')) {
                obj['assigned'] = ApiClient.convertToType(data['assigned'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Schema1.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Schema1.prototype['name'] = undefined;

/**
 * @member {String} username
 */
Schema1.prototype['username'] = undefined;

/**
 * @member {module:model/Schema1AddedBy} added_by
 */
Schema1.prototype['added_by'] = undefined;

/**
 * @member {String} added_at
 */
Schema1.prototype['added_at'] = undefined;

/**
 * Indicates if assigned to role or not. Defaults to true.
 * @member {Boolean} assigned
 */
Schema1.prototype['assigned'] = undefined;






export default Schema1;

