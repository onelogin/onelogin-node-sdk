/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VerifyFactorSamlRequest model module.
 * @module model/VerifyFactorSamlRequest
 * @version 0.0.1
 */
class VerifyFactorSamlRequest {
    /**
     * Constructs a new <code>VerifyFactorSamlRequest</code>.
     * @alias module:model/VerifyFactorSamlRequest
     * @param appId {String} App ID of the app for which you want to generate a SAML token. This is the app ID in OneLogin.
     * @param deviceId {String} Provide the MFA device_id you are submitting for verification. The device_id is supplied by the Generate SAML Assertion API.
     * @param stateToken {String} state_token associated with the MFA device_id you are submitting. The state_token is supplied by the Generate SAML Assertion API.
     */
    constructor(appId, deviceId, stateToken) { 
        
        VerifyFactorSamlRequest.initialize(this, appId, deviceId, stateToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appId, deviceId, stateToken) { 
        obj['app_id'] = appId;
        obj['device_id'] = deviceId;
        obj['state_token'] = stateToken;
    }

    /**
     * Constructs a <code>VerifyFactorSamlRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerifyFactorSamlRequest} obj Optional instance to populate.
     * @return {module:model/VerifyFactorSamlRequest} The populated <code>VerifyFactorSamlRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerifyFactorSamlRequest();

            if (data.hasOwnProperty('app_id')) {
                obj['app_id'] = ApiClient.convertToType(data['app_id'], 'String');
            }
            if (data.hasOwnProperty('device_id')) {
                obj['device_id'] = ApiClient.convertToType(data['device_id'], 'String');
            }
            if (data.hasOwnProperty('state_token')) {
                obj['state_token'] = ApiClient.convertToType(data['state_token'], 'String');
            }
            if (data.hasOwnProperty('otp_token')) {
                obj['otp_token'] = ApiClient.convertToType(data['otp_token'], 'String');
            }
            if (data.hasOwnProperty('do_not_notify')) {
                obj['do_not_notify'] = ApiClient.convertToType(data['do_not_notify'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * App ID of the app for which you want to generate a SAML token. This is the app ID in OneLogin.
 * @member {String} app_id
 */
VerifyFactorSamlRequest.prototype['app_id'] = undefined;

/**
 * Provide the MFA device_id you are submitting for verification. The device_id is supplied by the Generate SAML Assertion API.
 * @member {String} device_id
 */
VerifyFactorSamlRequest.prototype['device_id'] = undefined;

/**
 * state_token associated with the MFA device_id you are submitting. The state_token is supplied by the Generate SAML Assertion API.
 * @member {String} state_token
 */
VerifyFactorSamlRequest.prototype['state_token'] = undefined;

/**
 * Provide the OTP value for the MFA factor you are submitting for verification.
 * @member {String} otp_token
 */
VerifyFactorSamlRequest.prototype['otp_token'] = undefined;

/**
 * When verifying MFA via Protect Push, set this to true to stop additional push notifications being sent to the OneLogin Protect device.
 * @member {Boolean} do_not_notify
 */
VerifyFactorSamlRequest.prototype['do_not_notify'] = undefined;






export default VerifyFactorSamlRequest;

