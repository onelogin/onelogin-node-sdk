/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";

export class User {
  "id"?: number;
  /**
   * A username for the user.
   */
  "username"?: string;
  /**
   * A valid email for the user.
   */
  "email"?: string;
  /**
   * The user\'s first name.
   */
  "firstname"?: string;
  /**
   * The user\'s last name.
   */
  "lastname"?: string;
  /**
   * The user\'s job title.
   */
  "title"?: string;
  /**
   * The user\'s department.
   */
  "department"?: string;
  /**
   * The user\'s company.
   */
  "company"?: string;
  /**
   * Free text related to the user.
   */
  "comment"?: string;
  /**
   * The ID of the Group in OneLogin that the user is assigned to.
   */
  "groupId"?: number;
  /**
   * A list of OneLogin Role IDs of the user
   */
  "roleIds"?: Array<number>;
  /**
   * The E.164 format phone number for a user.
   */
  "phone"?: string;
  "state"?: User.StateEnum;
  "status"?: User.StatusEnum;
  /**
   * The ID of the OneLogin Directory of the user.
   */
  "directoryId"?: number;
  /**
   * The ID of the OneLogin Trusted IDP of the user.
   */
  "trustedIdpId"?: number;
  /**
   * The ID of the user\'s manager in Active Directory.
   */
  "managerAdId"?: string;
  /**
   * The OneLogin User ID for the user\'s manager.
   */
  "managerUserId"?: string;
  /**
   * The user\'s Active Directory username.
   */
  "samaccountName"?: string;
  /**
   * The user\'s directory membership.
   */
  "memberOf"?: string;
  /**
   * The principle name of the user.
   */
  "userprincipalname"?: string;
  /**
   * The distinguished name of the user.
   */
  "distinguishedName"?: string;
  /**
   * The ID of the user in an external directory.
   */
  "externalId"?: string;
  "activatedAt"?: string;
  "lastLogin"?: string;
  "invitationSentAt"?: string;
  "updatedAt"?: string;
  "preferredLocaleCode"?: string;
  "createdAt"?: string;
  "customAttributes"?: object;
  "invalidLoginAttempts"?: number;
  "lockedUntil"?: string;
  "passwordChangedAt"?: string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "id",
      baseName: "id",
      type: "number",
    },
    {
      name: "username",
      baseName: "username",
      type: "string",
    },
    {
      name: "email",
      baseName: "email",
      type: "string",
    },
    {
      name: "firstname",
      baseName: "firstname",
      type: "string",
    },
    {
      name: "lastname",
      baseName: "lastname",
      type: "string",
    },
    {
      name: "title",
      baseName: "title",
      type: "string",
    },
    {
      name: "department",
      baseName: "department",
      type: "string",
    },
    {
      name: "company",
      baseName: "company",
      type: "string",
    },
    {
      name: "comment",
      baseName: "comment",
      type: "string",
    },
    {
      name: "groupId",
      baseName: "group_id",
      type: "number",
    },
    {
      name: "roleIds",
      baseName: "role_ids",
      type: "Array<number>",
    },
    {
      name: "phone",
      baseName: "phone",
      type: "string",
    },
    {
      name: "state",
      baseName: "state",
      type: "User.StateEnum",
    },
    {
      name: "status",
      baseName: "status",
      type: "User.StatusEnum",
    },
    {
      name: "directoryId",
      baseName: "directory_id",
      type: "number",
    },
    {
      name: "trustedIdpId",
      baseName: "trusted_idp_id",
      type: "number",
    },
    {
      name: "managerAdId",
      baseName: "manager_ad_id",
      type: "string",
    },
    {
      name: "managerUserId",
      baseName: "manager_user_id",
      type: "string",
    },
    {
      name: "samaccountName",
      baseName: "samaccount_name",
      type: "string",
    },
    {
      name: "memberOf",
      baseName: "member_of",
      type: "string",
    },
    {
      name: "userprincipalname",
      baseName: "userprincipalname",
      type: "string",
    },
    {
      name: "distinguishedName",
      baseName: "distinguished_name",
      type: "string",
    },
    {
      name: "externalId",
      baseName: "external_id",
      type: "string",
    },
    {
      name: "activatedAt",
      baseName: "activated_at",
      type: "string",
    },
    {
      name: "lastLogin",
      baseName: "last_login",
      type: "string",
    },
    {
      name: "invitationSentAt",
      baseName: "invitation_sent_at",
      type: "string",
    },
    {
      name: "updatedAt",
      baseName: "updated_at",
      type: "string",
    },
    {
      name: "preferredLocaleCode",
      baseName: "preferred_locale_code",
      type: "string",
    },
    {
      name: "createdAt",
      baseName: "created_at",
      type: "string",
    },
    {
      name: "customAttributes",
      baseName: "custom_attributes",
      type: "object",
    },
    {
      name: "invalidLoginAttempts",
      baseName: "invalid_login_attempts",
      type: "number",
    },
    {
      name: "lockedUntil",
      baseName: "locked_until",
      type: "string",
    },
    {
      name: "passwordChangedAt",
      baseName: "password_changed_at",
      type: "string",
    },
  ];

  static getAttributeTypeMap() {
    return User.attributeTypeMap;
  }
}

export namespace User {
  export enum StateEnum {
    NUMBER_0 = <any>0,
    NUMBER_1 = <any>1,
    NUMBER_2 = <any>2,
    NUMBER_3 = <any>3,
  }
  export enum StatusEnum {
    NUMBER_0 = <any>0,
    NUMBER_1 = <any>1,
    NUMBER_2 = <any>2,
    NUMBER_3 = <any>3,
    NUMBER_4 = <any>4,
    NUMBER_5 = <any>5,
    NUMBER_7 = <any>7,
    NUMBER_8 = <any>8,
  }
}
