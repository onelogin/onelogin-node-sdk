/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0-alpha.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { FactorInnerFactorData } from './factorInnerFactorData';

export class FactorInner {
    /**
    * MFA device identifier.
    */
    'id'?: string;
    /**
    * accepted : factor has been verified. pending: registered but has not been verified.
    */
    'status'?: FactorInner.StatusEnum;
    /**
    * True = is user\'s default MFA device for OneLogin.
    */
    '_default'?: boolean;
    /**
    * \"Official\" authentication factor name, as it appears to administrators in OneLogin.
    */
    'authFactorName'?: string;
    /**
    * Authentication factor display name as it appears to users upon initial registration, as defined by admins at Settings > Authentication Factors.
    */
    'typeDisplayName'?: string;
    /**
    * Authentication factor display name assigned by users when they enroll the device.
    */
    'userDisplayName'?: string;
    /**
    * A short lived token that is required to Verify the Factor. This token expires based on the expires_in parameter passed in.
    */
    'expiresAt'?: string;
    'factorData'?: FactorInnerFactorData;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "FactorInner.StatusEnum"
        },
        {
            "name": "_default",
            "baseName": "default",
            "type": "boolean"
        },
        {
            "name": "authFactorName",
            "baseName": "auth_factor_name",
            "type": "string"
        },
        {
            "name": "typeDisplayName",
            "baseName": "type_display_name",
            "type": "string"
        },
        {
            "name": "userDisplayName",
            "baseName": "user_display_name",
            "type": "string"
        },
        {
            "name": "expiresAt",
            "baseName": "expires_at",
            "type": "string"
        },
        {
            "name": "factorData",
            "baseName": "factor_data",
            "type": "FactorInnerFactorData"
        }    ];

    static getAttributeTypeMap() {
        return FactorInner.attributeTypeMap;
    }
}

export namespace FactorInner {
    export enum StatusEnum {
        Pending = <any> 'pending',
        Accepted = <any> 'accepted'
    }
}
