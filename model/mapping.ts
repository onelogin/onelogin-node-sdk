/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from "./models";
import { Condition } from "./condition";
import { MappingAction } from "./mappingAction";

export class Mapping {
  "id"?: number;
  /**
   * The name of the mapping.
   */
  "name": string;
  /**
   * Indicates if the mapping is enabled or not.
   */
  "enabled": boolean;
  /**
   * Indicates how conditions should be matched.
   */
  "match": Mapping.MatchEnum;
  /**
   * Indicates the order of the mapping. When `null` this will default to last position.
   */
  "position": number;
  /**
   * An array of conditions that the user must meet in order for the mapping to be applied.
   */
  "conditions"?: Array<Condition>;
  /**
   * An array of actions that will be applied to the users that are matched by the conditions.
   */
  "actions": Array<MappingAction>;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: "id",
      baseName: "id",
      type: "number",
    },
    {
      name: "name",
      baseName: "name",
      type: "string",
    },
    {
      name: "enabled",
      baseName: "enabled",
      type: "boolean",
    },
    {
      name: "match",
      baseName: "match",
      type: "Mapping.MatchEnum",
    },
    {
      name: "position",
      baseName: "position",
      type: "number",
    },
    {
      name: "conditions",
      baseName: "conditions",
      type: "Array<Condition>",
    },
    {
      name: "actions",
      baseName: "actions",
      type: "Array<MappingAction>",
    },
  ];

  static getAttributeTypeMap() {
    return Mapping.attributeTypeMap;
  }
}

export namespace Mapping {
  export enum MatchEnum {
    All = <any>"all",
    Any = <any>"any",
  }
}
