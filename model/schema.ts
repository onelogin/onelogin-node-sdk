/**
 * OneLogin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0-alpha.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { SchemaProvisioning } from './schemaProvisioning';

export class Schema {
    /**
    * Apps unique ID in OneLogin.
    */
    'id'?: number;
    /**
    * ID of the apps underlying connector.
    */
    'connectorId'?: number;
    /**
    * App name.
    */
    'name'?: string;
    /**
    * Freeform description of the app.
    */
    'description'?: string;
    /**
    * Freeform notes about the app.
    */
    'notes'?: string;
    /**
    * The security policy assigned to the app.
    */
    'policyId'?: number;
    /**
    * The custom login page branding to use for this app. Applies to app initiated logins via OIDC or SAML.
    */
    'brandId'?: number;
    /**
    * A link to the apps icon url.
    */
    'iconUrl'?: string;
    /**
    * Indicates if the app is visible in the OneLogin portal.
    */
    'visible'?: boolean;
    /**
    * An ID indicating the type of app.
    */
    'authMethod'?: Schema.AuthMethodEnum;
    /**
    * ID of the OneLogin portal tab that the app is assigned to.
    */
    'tabId'?: number;
    /**
    * The date the app was created.
    */
    'createdAt'?: string;
    /**
    * The date the app was last updated.
    */
    'updatedAt'?: string;
    /**
    * List of Role IDs that are assigned to the app. On App Create or Update the entire array is replaced with the values provided.
    */
    'roleIds'?: Array<number>;
    /**
    * Indicates whether or not administrators can access the app as a user that they have assumed control over.
    */
    'allowAssumedSignin'?: boolean;
    'provisioning'?: SchemaProvisioning;
    'sso'?: object;
    'configuration'?: object;
    'parameters'?: object;
    'enforcementPoint'?: object;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "connectorId",
            "baseName": "connector_id",
            "type": "number"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string"
        },
        {
            "name": "policyId",
            "baseName": "policy_id",
            "type": "number"
        },
        {
            "name": "brandId",
            "baseName": "brand_id",
            "type": "number"
        },
        {
            "name": "iconUrl",
            "baseName": "icon_url",
            "type": "string"
        },
        {
            "name": "visible",
            "baseName": "visible",
            "type": "boolean"
        },
        {
            "name": "authMethod",
            "baseName": "auth_method",
            "type": "Schema.AuthMethodEnum"
        },
        {
            "name": "tabId",
            "baseName": "tab_id",
            "type": "number"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string"
        },
        {
            "name": "roleIds",
            "baseName": "role_ids",
            "type": "Array<number>"
        },
        {
            "name": "allowAssumedSignin",
            "baseName": "allow_assumed_signin",
            "type": "boolean"
        },
        {
            "name": "provisioning",
            "baseName": "provisioning",
            "type": "SchemaProvisioning"
        },
        {
            "name": "sso",
            "baseName": "sso",
            "type": "object"
        },
        {
            "name": "configuration",
            "baseName": "configuration",
            "type": "object"
        },
        {
            "name": "parameters",
            "baseName": "parameters",
            "type": "object"
        },
        {
            "name": "enforcementPoint",
            "baseName": "enforcement_point",
            "type": "object"
        }    ];

    static getAttributeTypeMap() {
        return Schema.attributeTypeMap;
    }
}

export namespace Schema {
    export enum AuthMethodEnum {
        NUMBER_0 = <any> 0,
        NUMBER_1 = <any> 1,
        NUMBER_2 = <any> 2,
        NUMBER_3 = <any> 3,
        NUMBER_4 = <any> 4,
        NUMBER_6 = <any> 6,
        NUMBER_7 = <any> 7,
        NUMBER_8 = <any> 8
    }
}
